//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.OrderService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.OrderServiceSoap")]
    public interface OrderServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddOrder(int supplierId, decimal totalAmount, Client.OrderService.OrderItem[] orderItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOrder", ReplyAction="*")]
        System.Threading.Tasks.Task AddOrderAsync(int supplierId, decimal totalAmount, Client.OrderService.OrderItem[] orderItems);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateOrderStatus(int orderId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateOrderStatus", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateOrderStatusAsync(int orderId, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void DeleteOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteOrder", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderById", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetOrderById(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderById", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOrderByIdAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOrderItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddOrderItem(int orderId, int productId, int quantityOrdered, decimal pricePerUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddOrderItem", ReplyAction="*")]
        System.Threading.Tasks.Task AddOrderItemAsync(int orderId, int productId, int quantityOrdered, decimal pricePerUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetOrderItems(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrderItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOrderItemsAsync(int orderId);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class OrderItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int productIdField;
        
        private int quantityOrderedField;
        
        private decimal pricePerUnitField;
        
        private string productNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
                this.RaisePropertyChanged("ProductId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int QuantityOrdered {
            get {
                return this.quantityOrderedField;
            }
            set {
                this.quantityOrderedField = value;
                this.RaisePropertyChanged("QuantityOrdered");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal PricePerUnit {
            get {
                return this.pricePerUnitField;
            }
            set {
                this.pricePerUnitField = value;
                this.RaisePropertyChanged("PricePerUnit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
                this.RaisePropertyChanged("ProductName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OrderServiceSoapChannel : Client.OrderService.OrderServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceSoapClient : System.ServiceModel.ClientBase<Client.OrderService.OrderServiceSoap>, Client.OrderService.OrderServiceSoap {
        
        public OrderServiceSoapClient() {
        }
        
        public OrderServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public void AddOrder(int supplierId, decimal totalAmount, Client.OrderService.OrderItem[] orderItems) {
            base.Channel.AddOrder(supplierId, totalAmount, orderItems);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(int supplierId, decimal totalAmount, Client.OrderService.OrderItem[] orderItems) {
            return base.Channel.AddOrderAsync(supplierId, totalAmount, orderItems);
        }
        
        public void UpdateOrderStatus(int orderId, string status) {
            base.Channel.UpdateOrderStatus(orderId, status);
        }
        
        public System.Threading.Tasks.Task UpdateOrderStatusAsync(int orderId, string status) {
            return base.Channel.UpdateOrderStatusAsync(orderId, status);
        }
        
        public void DeleteOrder(int orderId) {
            base.Channel.DeleteOrder(orderId);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(int orderId) {
            return base.Channel.DeleteOrderAsync(orderId);
        }
        
        public System.Data.DataTable GetOrderById(int orderId) {
            return base.Channel.GetOrderById(orderId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOrderByIdAsync(int orderId) {
            return base.Channel.GetOrderByIdAsync(orderId);
        }
        
        public System.Data.DataTable GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public void AddOrderItem(int orderId, int productId, int quantityOrdered, decimal pricePerUnit) {
            base.Channel.AddOrderItem(orderId, productId, quantityOrdered, pricePerUnit);
        }
        
        public System.Threading.Tasks.Task AddOrderItemAsync(int orderId, int productId, int quantityOrdered, decimal pricePerUnit) {
            return base.Channel.AddOrderItemAsync(orderId, productId, quantityOrdered, pricePerUnit);
        }
        
        public System.Data.DataTable GetOrderItems(int orderId) {
            return base.Channel.GetOrderItems(orderId);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOrderItemsAsync(int orderId) {
            return base.Channel.GetOrderItemsAsync(orderId);
        }
    }
}
